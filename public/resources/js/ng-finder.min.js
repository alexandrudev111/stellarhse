//!function(a,b){return"function"==typeof define&&define.amd?(define("ngFinder",["jquery","angular","elfinder"],function(a,c){return b(c)}),void 0):b(a)}(angular||null,function(a){return a.module("ngFinder",[]).directive("elFinder",function(){return{restrict:"C",scope:{url:"=url",onSelect:"&select"},controller:["$scope",function(a){a.selectFile=function(b){var c=a.$parent.fieldName,d=a.$parent.window;d.document.forms[0].elements[c].value=b,$("#elfinder").hide()}}],link:function(b,c,d){var e={toolbar:d.toolbar||"mkdir,mkfile,upload|open,download|info|copy,cut,paste|rename,rm|view|help",navbar:d.contextmenuNavbar||"open,|,copy,cut,paste,|,rm,|,info",cwd:d.contextmenuCwd||"reload,back,|,upload,mkdir,mkfile,paste,|,info",files:d.contextmenuFiles||"open,download,|,copy,cut,paste,|,rm,edit,rename,|,info"},f={allowShortcuts:!1,rememberLastDir:!0,uiOptions:{toolbar:e.toolbar.split("|").map(function(a){return a.split(",")})},contextmenu:{navbar:e.navbar.split(","),cwd:e.cwd.split(","),files:e.files.split(",")},url:b.url||"/elfinder",commandsOptions:{getfile:{onlyURL:!1}}};d.select&&(f.contextmenu.files.unshift("getfile"),f.onlyMimes=["image"],f.getFileCallback=function(a){$("#elfinder").hide(),b.onSelect({$file:a})}),$(c).elfinder(f),$(".elfinder-toolbar",c).addClass("btn-toolbar"),$(".elfinder-buttonset",c).addClass("btn-group"),$(".elfinder-button",c).addClass("btn btn-default");var g={back:"arrow-left",forward:"arrow-right",mkdir:"plus-sign",mkfile:"file",upload:"upload",open:"folder-open",download:"download-alt",getfile:"download",info:"info-sign",quicklook:"eye-open",rm:"trash",rename:"pencil",edit:"pencil",resize:"fullscreen",view:"th",sort:"sort",help:"question-sign"};$(".elfinder-button-icon-copy",c).removeClass("elfinder-button-icon").addClass("icon-cut"),$(".elfinder-button-icon-cut",c).removeClass("elfinder-button-icon").addClass("icon-copy"),$(".elfinder-button-icon-paste",c).removeClass("elfinder-button-icon").addClass("icon-paste"),a.forEach(g,function(a,b){$(".elfinder-button-icon-"+b,c).removeClass("elfinder-button-icon").addClass("icon-"+a)})}}}),a.module("ngFinder")});
//# sourceMappingURL=ng-finder.map 

    /**
     * <div class="el-finder" toolbar="mkdir,mkfile,upload|open,download|info|copy,cut"></div>
     */
    angular.module('ngFinder', [])
        .directive('elFinder', function($parse) {
            return {
                restrict: 'C',
                scope: {
                    'file'      : '=',
                    'onSelect'  : '&select'
                },
                controller: function($scope) {
                    // for TinyMCE integration
                    $scope.selectFile = function(url) {
                        var aFieldName = $scope.$parent.fieldName, 
                            aWin = $scope.$parent.window;
                        aWin.document.forms[0].elements[aFieldName].value = url;
                        $('#elfinder').hide();
                    }
                },
                link: function(scope, element, attrs) {
                    var menus = {
                        toolbar: attrs.toolbar || 'mkdir,mkfile,upload|open,download|info|copy,cut,paste|rename,rm|view|help',
                        navbar:  attrs.contextmenuNavbar || 'open,|,copy,cut,paste,|,rm,|,info',
                        cwd:     attrs.contextmenuCwd || 'reload,back,|,upload,mkdir,mkfile,paste,|,info',
                        files:   attrs.contextmenuFiles || 'open,download,|,copy,cut,paste,|,rm,edit,rename,|,info'
                    }
                    var options = {
                        allowShortcuts: false,
                        // lang: 'ru',             // language (OPTIONAL)
                        rememberLastDir : true,
                        uiOptions: {
                            toolbar : menus.toolbar.split('|').map(function(item) { return item.split(',');})
                        },
                        contextmenu : {
                            navbar : menus.navbar.split(','),
                            cwd    : menus.cwd.split(','),
                            files  : menus.files.split(',')
                        },
                        url : attrs.url || '/elfinder',
                        commandsOptions : {
                            getfile: {
                                onlyURL: false
                            }
                        }
                    };
                    if (attrs.select) {
                        options.contextmenu.files.unshift('getfile');
                        options.onlyMimes = ["image"];
                        options.getFileCallback = function(file) {
                            $('#elfinder').hide();
                            scope.onSelect({ '$file': file });
                        }
                    }
                    $(element).elfinder(options);
                    $('.elfinder-toolbar', element).addClass('btn-toolbar');
                    $('.elfinder-buttonset', element).addClass('btn-group');
                    $('.elfinder-button', element).addClass('btn');
                    // glyphicons
                    var replaceClasses = {
                        'back': 'arrow-left',
                        'forward': 'arrow-right',
                        'mkdir': 'plus-sign',
                        'mkfile': 'file',
                        'upload': 'upload',
                        'open': 'folder-open',
                        'download': 'download-alt',
                        'getfile': 'download',
                        'info': 'info-sign',
                        'quicklook': 'eye-open',
                        'rm': 'trash',
                        'rename': 'pencil',
                        'edit': 'pencil',
                        'resize': 'fullscreen',
                        'view': 'th',
                        'sort': 'sort',
                        'help': 'question-sign'
                    };
                    // font awesome
                    $('.elfinder-button-icon-copy', element).removeClass('elfinder-button-icon').addClass('icon-cut');
                    $('.elfinder-button-icon-cut', element).removeClass('elfinder-button-icon').addClass('icon-copy');
                    $('.elfinder-button-icon-paste', element).removeClass('elfinder-button-icon').addClass('icon-paste');
                    angular.forEach(replaceClasses, function(newClass, oldClass) {
                        $('.elfinder-button-icon-' + oldClass, element)
                            .removeClass('elfinder-button-icon')
                            .addClass('glyphicon glyphicon-' + newClass);
                    });
                }
            };
        });